<<<<<<< HEAD
(()=>{var e={669:(e,s,t)=>{t(818).config(),e.exports={mongoDbUrl:process.env.MONGO_DB_URL,logDbUrl:process.env.LOG_DB_URL,tokenSecretKey:process.env.JWT_SECRET,port:process.env.PORT,adminSecretKey:process.env.ADMIN_SECRET_KEY}},6865:(e,s,t)=>{const a=t(6037),{mongoDbUrl:r}=t(669);a.connect(r,{maxPoolSize:4});const i=a.connection;i.on("error",console.error.bind(console,"connection error:")),i.once("open",(()=>{console.log("Databse connected")})),e.exports=i},4475:(e,s,t)=>{const a=t(5124);t(8639);const r=[];r.push(new a.transports.File({filename:"app.log"}));const i=a.createLogger({format:a.format.combine(a.format.timestamp({format:"YYYY-MM-DD HH:mm:ss"}),a.format.printf((e=>`${e.timestamp} [${e.level.toUpperCase()}]: ${e.message} ${e.meta?JSON.stringify(e.meta):""}`))),transports:r,defaultMeta:{service:"user-service"}});e.exports=i},6593:(e,s,t)=>{const a=t(6107),r=t(829),i=t(5486),d=t(3903),n=t(6928),{getCurrentIPAddress:u,generateRandomAlphaNumericID:o}=t(8093),{port:l,tokenSecretKey:c}=t(669),m=t(1935);e.exports={createAdmin:async(e,s)=>{try{let{name:t,email:r,password:c,mobile:m}=e.body;if(!(t&&r&&c&&m))return s.status(400).send({status:!1,message:"All fields are required"});let{profilePic:g}=e.files;if(!g)return s.status(400).send({status:!1,message:"No profile pic uploaded"});c=await i.hash(c,10);let p=u(),y="/adminImages/",f=d.v4()+"."+g.name.split(".").pop(),h=`http://${p}:${l}${y}`,I=n.join(__dirname,"..","..","adminImages",f);g.mv(I,(e=>{e&&console.log(e)})),picObj={picName:f,picPath:h};let S={adminId:o(26),sessionToken:o(51),name:t,email:r,password:c,mobile:m,profilePic:picObj},_=await a.create(S);return s.status(201).send({status:!0,message:"Admin created",data:_})}catch(e){return s.status(500).send({status:!1,message:e.message})}},adminLogin:async(e,s)=>{try{let{email:t,password:d}=e.body;if(!t||!d)return s.status(400).send({status:!1,message:"Email and password are required"});let n=await a.findOne({email:t});if(!n)return s.status(400).send({status:!1,message:"Bad Reques!!!"});i.compare(d,n.password,(function(e,a){if(e)throw e;!async function(e){if(e){let e={},a=Date.now(),i=Math.floor(a/1e3),d=r.sign({email:n.email,adminId:n._id.toString(),iat:i},c,{expiresIn:"24h"});return e._id=n._id.toString(),e.email=t,e.token=d,s.setHeader("Authorization","Bearer",d),n.sessionToken=o(51),await n.save(),s.status(200).send({status:!0,message:"Successfully login",data:e})}s.status(401).send({status:!1,message:"Login denied"})}(a)}))}catch(e){return s.status(500).send({status:!1,message:e.message})}},getAllBookingsOfUser:async(e,s)=>{try{const{adminId:t,sessionToken:r,userId:i}=e.params;if(!t||!r)return s.status(400).send({status:!1,message:"All fields are required"});let d=await a.findOne({adminId:t,sessionToken:r});if(!d)return s.status(404).send({status:!1,message:"Bad Reques!!!"});if(d.adminId===t&&d.sessionToken===r){if(!await m.findOne({userId:i}))return s.status(404).send({status:!1,message:"User Not Found"});let e=await bookingModel.find({userId:i});return s.status(200).send({status:!0,message:"Success",data:e})}return s.status(400).send({status:!1,message:"Session Expired"})}catch(e){return s.status(500).send({status:!1,message:e.message})}}}},452:(e,s,t)=>{const a=t(4406);let{getCurrentIPAddress:r}=t(8093);const i=t(3903),d=t(6928),n=t(9896),{port:u,adminSecretKey:o}=t(669),{isValidObjectId:l}=t(6037),c=t(4475);e.exports={addCategory:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==o)return s.status(401).send({status:!1,message:"Not authorized"});let{name:l,description:c}=e.body;if(!l||!c)return s.status(400).send({status:!1,message:"All fields are required"});let{File_Extension:m,File_Path:g,File_data:p,File_name:y}=e.body.FileUpload,f=Buffer.from(p,"base64"),h=d.join(__dirname,"..","..","categoryImages");n.existsSync(h)||n.mkdirSync(h);let I=r(),S="/categoryImages/",_=i.v4()+m,k=`http://${I}:${u}${S}`,A=d.join(__dirname,"..","..","categoryImages",_);n.writeFileSync(A,f);let w={name:l,description:c,category_image:{fileName:_,filePath:k}},v=await a.create(w);return s.status(200).send({status:!0,message:"Category Added",data:v})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in addCategory API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},getCategoryById:async(e,s)=>{try{let t,{categoryId:r}=e.params;if(r){if(!l(r))return s.status(400).send({status:!1,message:"Invalid category Id"});t=await a.findById(r)}if(!t)return s.status(200).send({status:!0,message:"Category Not Found"});let i=await productModel.find({category:t._id});return s.status(200).send({status:!0,message:"Success",data:t,products:i})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in getCategoryById API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},getProductByKeywords:async(e,s)=>{try{let{service_search:t}=e.body;if(!t)return s.status(400).send({status:!1,message:"Search parameter is required"});let a={$or:[{name:{$regex:t,$options:"i"}},{subTitle:{$regex:t,$options:"i"}},{description:{$regex:t,$options:"i"}}]},r=await productModel.find(a);return s.status(200).send({status:!0,message:"Success",products:r})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in getProductByKeywords API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},getAllCategories:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Bad Request!!!"});if(t!==o)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let r=await a.find({});return s.status(200).send({status:!0,message:"Success",data:r})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in getAllCategories API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},updateCategory:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Bad Request!!!"});if(t!==o)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let{categoryId:c}=e.params;if(!c)return s.status(400).send({status:!1,message:"Category Id is required"});if(!l(c))return s.status(400).send({status:!1,message:"Invalid Category Id"});let m=await a.findById(c);if(!m)return s.status(404).send({status:!1,message:"Category Not Found"});let g=e.body;if("name"in g&&(m.name=g.name),"description"in g&&(m.description=g.description),"FileUpload"in g){let{File_Extension:s,File_Path:t,File_data:a,File_name:o}=e.body.FileUpload,l=Buffer.from(a,"base64"),c=r(),g="/categoryImages/",p=i.v4()+s,y=`http://${c}:${u}${g}`,f=d.join(__dirname,"..","..","categoryImages",p),h=m.category_image.fileName,I=d.join(__dirname,"..","..","categoryImages",h);n.existsSync(I)&&n.unlinkSync(I),n.writeFileSync(f,l);let S={fileName:p,filePath:y};m.category_image=S}return await m.save(),s.status(200).send({status:!0,message:"Category updated successfully",data:m})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in updateCategory API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},deleteCategory:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Bad Request!!!"});if(t!==o)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let{categoryId:r}=e.params;return r?await a.findById(r)?(await a.deleteOne({_id:r}),s.status(200).send({status:!0,message:"Category deleted successfully"})):s.status(404).send({status:!1,message:"No category found with this category Id"}):s.status(400).send({status:!1,message:"CategoryId is required"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in deleteCategory API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}}}},8295:(e,s,t)=>{const a=t(4475),r=t(2357),i=(t(7013),t(6928)),d=t(9896),n=t(3903),{isValidObjectId:u}=t(6037);let{getCurrentIPAddress:o}=t(8093),{port:l,adminSecretKey:c}=t(669);e.exports={createClassSchedule:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==c)return s.status(401).send({status:!1,message:"Not Authorized"});const{courseId:a,course_name:u,meeting_link:m,teacherId:g,techer_name:p,input_text:y,youtube_video_code:f,status:h}=e.body;let I=null;if("FileUpload"in e.body){let{File_Extension:s,File_Path:t,File_data:a,File_name:r}=e.body.FileUpload,u=Buffer.from(a,"base64"),c=i.join(__dirname,"..","..","class_pdf");d.existsSync(c)||d.mkdirSync(c);let m=o(),g="/class_pdf/",p=n.v4()+s,y=`http://${m}:${l}${g}`,f=i.join(__dirname,"..","..","class_pdf",p);d.writeFileSync(f,u),I={fileName:p,filePath:y}}const S={courseId:a,course_name:u,meeting_link:m,teacherId:g,techer_name:p,input_text:y,pdf_upload_file:I,youtube_video_code:f,status:h};let _=await r.create(S);return s.status(201).send({status:!0,message:"Class schedule created successfully",data:_})}catch(t){let r={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return a.error(`Error in createClassSchedule API: ${t.message}`,{meta:r}),s.status(500).send({status:!1,message:t.message})}},getAllClassSchedule:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==c)return s.status(401).send({status:!1,message:"Not Authorized"});const a=await r.find({});return s.status(201).send({status:!0,message:"Class schedule created successfully",data:a})}catch(t){let r={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return a.error(`Error in getAllClassSchedule API: ${t.message}`,{meta:r}),s.status(500).send({status:!1,message:t.message})}},getSchedule:async(e,s)=>{try{const{courseId:t,key:a}=e.params;if(!t||!a)return s.status(400).send({status:!1,message:"CourseId and key are required"});if(a!==c)return s.status(401).send({status:!1,message:"Not Authorized"});if(!u(t))return s.status(400).send({status:!1,message:"Invalid courseId"});let i=await r.findById(t);return i?s.status(201).send({status:!0,message:"Success",data:i}):s.status(400).send({status:!1,message:"Class schedule not found"})}catch(t){let r={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return a.error(`Error in getSchedule API: ${t.message}`,{meta:r}),s.status(500).send({status:!1,message:t.message})}},updateSchedule:async(e,s)=>{try{const{courseId:t,key:a}=e.params;if(!t||!a)return s.status(400).send({status:!1,message:"CourseId and key are required"});if(a!==c)return s.status(401).send({status:!1,message:"Not Authorized"});if(!u(t))return s.status(400).send({status:!1,message:"Invalid courseId"});let m=await r.findById(t);if(!m)return s.status(400).send({status:!1,message:"Class schedule not found"});const g=e.body;if("course_name"in g&&(m.course_name=g.course_name),"meeting_link"in g&&(m.meeting_link=g.meeting_link),"techer_name"in g&&(m.techer_name=g.techer_name),"input_text"in g&&(m.input_text=g.input_text),"youtube_video_code"in g&&(m.youtube_video_code=g.youtube_video_code),"status"in g&&(m.status=g.status),"FileUpload"in e.body){let s=m.pdf_upload_file.fileName;if(s){let e=i.join(__dirname,"..","..","class_pdf",s);d.existsSync(e)&&d.unlinkSync(e)}let{File_Extension:t,File_Path:a,File_data:r,File_name:u}=e.body.FileUpload,c=Buffer.from(r,"base64"),g=o(),p="/class_pdf/",y=n.v4()+t,f=`http://${g}:${l}${p}`,h=i.join(__dirname,"..","..","class_pdf",y);d.writeFileSync(h,c);let I={fileName:y,filePath:f};m.pdf_upload_file=I}return await m.save(),s.status(201).send({status:!0,message:"Schedule updated successfully",data:m})}catch(t){let r={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return a.error(`Error in updateSchedule API: ${t.message}`,{meta:r}),s.status(500).send({status:!1,message:t.message})}},deleteSchedule:async(e,s)=>{try{const{courseId:t,key:a}=e.params;if(!t||!a)return s.status(400).send({status:!1,message:"CourseId is required"});if(a!==c)return s.status(401).send({status:!1,message:"Not Authorized"});if(!u(t))return s.status(400).send({status:!1,message:"Invalid courseId"});let n=await r.findById(t);if(!n)return s.status(400).send({status:!1,message:"Class schedule not found"});let o=n.pdf_upload_file.fileName;if(o){let e=i.join(__dirname,"..","..","class_pdf",o);d.existsSync(e)&&d.unlinkSync(e)}return await r.deleteOne({courseId:t})?s.status(201).send({status:!0,message:"Schedule deleted successfully"}):s.status(404).send({status:!1,message:"Schedule not found or alrady deleted"})}catch(t){let r={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return a.error(`Error in deleteSchedule API: ${t.message}`,{meta:r}),s.status(500).send({status:!1,message:t.message})}}}},9957:(e,s,t)=>{const a=t(7013),r=t(2357),i=t(8116),d=t(1935),n=t(6928),u=t(9896),o=t(3903),l=t(4475),{isValidObjectId:c}=t(6037);let{getCurrentIPAddress:m}=t(8093),{port:g,adminSecretKey:p}=t(669);e.exports={addCourse:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==p)return s.status(401).send({status:!1,message:"Not Authorized"});const{categoryId:r,category_name:i,course_name:d,description:l,course_fee:c,duration:y,start_date:f,end_date:h,class_time:I,course_seat_limit:S,offer_in_amount:_,course_type:k}=e.body;let A=null;if("FileUpload"in e.body){let{File_Extension:s,File_Path:t,File_data:a,File_name:r}=e.body.FileUpload,i=Buffer.from(a,"base64"),d=n.join(__dirname,"..","..","courseImages");u.existsSync(d)||u.mkdirSync(d);let l=m(),c="/courseImages/",p=o.v4()+s,y=`http://${l}:${g}${c}`,f=n.join(__dirname,"..","..","courseImages",p);u.writeFileSync(f,i),A={fileName:p,filePath:y}}let w={categoryId:r,category_name:i,course_name:d,description:l,course_fee:c,duration:y,start_date:f,end_date:h,class_time:I,course_seat_limit:S,offer_in_amount:_,course_type:k,course_image:A},v=await a.create(w);return s.status(201).send({status:!0,message:"Course created successfully",data:v})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in addCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getAllCourses:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==p)return s.status(401).send({status:!1,message:"Not Authorized"});let r=await a.find({});return s.status(201).send({status:!0,message:"Success",data:r})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in getAllCourses API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getCourseById:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==p)return s.status(401).send({status:!1,message:"Not Authorized"});const{courseId:r}=e.params;if(!r)return s.status(400).send({status:!1,message:"CourseId is required"});if(!c(r))return s.status(400).send({status:!1,message:"Invalid courseId"});let i=await a.findById(r);return i?s.status(201).send({status:!0,message:"Success",data:i}):s.status(400).send({status:!1,message:"Course not found"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in getCourseById API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},updateCourse:async(e,s)=>{try{const{key:t,courseId:r}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==p)return s.status(401).send({status:!1,message:"Not Authorized"});if(!r)return s.status(400).send({status:!1,message:"CourseId is required"});if(!c(r))return s.status(400).send({status:!1,message:"Invalid courseId"});let i=await a.findById(r);if(!i)return s.status(400).send({status:!1,message:"Course not found"});let d=e.body;if("category_name"in d&&(i.category_name=d.category_name),"course_name"in d&&(i.course_name=d.course_name),"description"in d&&(i.description=d.description),"course_fee"in d&&(i.course_fee=d.course_fee),"duration"in d&&(i.duration=d.duration),"start_date"in d&&(i.start_date=d.start_date),"end_date"in d&&(i.end_date=d.end_date),"class_time"in d&&(i.class_time=d.class_time),"course_seat_limit"in d&&(i.course_seat_limit=d.course_seat_limit),"offer_in_amount"in d&&(i.offer_in_amount=d.offer_in_amount),"course_type"in d&&(i.course_type=d.course_type),"FileUpload"in e.body){let s=i.course_image.fileName;if(s){let e=n.join(__dirname,"..","..","courseImages",s);u.existsSync(e)&&u.unlinkSync(e)}let{File_Extension:t,File_Path:a,File_data:r,File_name:d}=e.body.FileUpload,l=Buffer.from(r,"base64"),c=m(),p="/courseImages/",y=o.v4()+t,f=`http://${c}:${g}${p}`,h=n.join(__dirname,"..","..","courseImages",y);u.writeFileSync(h,l);let I={fileName:y,filePath:f};i.course_image=I}return await i.save(),s.status(200).send({status:!0,message:"Course updated successfully",data:i})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in updateCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},deleteCourse:async(e,s)=>{try{const{courseId:t,key:r}=e.params;if(!t||!r)return s.status(400).send({status:!1,message:"CourseId and key are required"});if(r!==p)return s.status(401).send({status:!1,message:"Not Authorized"});if(!c(t))return s.status(400).send({status:!1,message:"Invalid courseId"});let i=await a.findById(t);if(!i)return s.status(400).send({status:!1,message:"Course not found"});let d=i.course_image.fileName;if(d){let e=n.join(__dirname,"..","..","courseImages",d);u.existsSync(e)&&u.unlinkSync(e)}return await a.deleteOne({_id:t}),s.status(200).send({status:!0,message:"Course deleted successfully"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in deleteCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getAllClassesOfMyCourse:async(e,s)=>{try{const{userId:t,courseId:n}=e.params;if(!t||!n)return s.status(400).send({status:!1,message:"All fields are required"});if(!await d.findOne({userId:t}))return s.status(400).send({status:!1,message:"User not found"});if(!await a.findById(n))return s.status(400).send({status:!1,message:"Course not found"});let u=await i.findOne({userId:t,courseId:n}),o=await r.find({courseId:u.courseId});return s.status(200).send({status:!0,message:"success",data:o})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in updateCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}}}},3974:(e,s,t)=>{const a=t(8116),r=t(1935),i=t(7013),d=t(4475),{adminSecretKey:n}=t(669);e.exports={purchaseCourse:async(e,s)=>{try{let{userId:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});let{courseId:r,amount:i,status:d,notes:n}=e.body,u={courseId:r,amount:i,status:d,userId:t,notes:n},o=await a.create(u);return s.status(201).send({status:!0,message:"Course purchased successfully",data:o})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in purchaseCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getPurchasedCourse:async(e,s)=>{try{const{key:t,purchaseId:r}=e.params;if(!t||!r)return s.status(400).send({status:!1,message:"purchaseId and key is required"});if(!isValidObjectId(r))return s.status(400).send({status:!1,message:"Invalid purchaseId"});let i=await a.findById(r);return i?s.status(201).send({status:!0,message:"Success",data:i}):s.status(400).send({status:!1,message:"Purchased course not found"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in getPurchasedCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getAllPurchasedCourses:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==n)return s.status(400).send({status:!1,message:"Not Authorized"});let d=await a.find({}),u=[];for(let e of d){let s={purchaseDetails:e,user:await r.findOne({userId:e.userId}),course:await i.findOne({_id:e.courseId})};u.push(s)}return s.status(201).send({status:!0,message:"Success",data:u})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in getAllPurchasedCourses API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getMyAllPurchasedCourses:async(e,s)=>{try{const{key:t,userId:r}=e.params;if(!r||!t)return s.status(400).send({status:!1,message:"userId and key is required"});if(t!==n)return s.status(400).send({status:!1,message:"Not Authorized"});let i=await a.find({userId:r});return s.status(201).send({status:!0,message:"Success",data:i})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in getAllPurchasedCourses API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getAllUsersOfACourse:async(e,s)=>{try{const{courseId:t,key:d}=e.params;if(!t||!d)return s.status(400).send({status:!1,message:"All fields are required"});let n=await i.findById(t);if(!n)return s.status(400).send({status:!1,message:"Course Not Found"});let u=await a.find({courseId:t}),o=[];for(let e of u){let s=await r.findOne({userId:e.userId});o.push(s)}return s.status(201).send({status:!0,message:"Success",course:n,users:o})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in getAllUsersOfACourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},updatePurchasedCourseDetails:async(e,s)=>{try{const{purchaseId:t,key:r}=e.params;if(!t||!r)return s.status(400).send({status:!1,message:"purchaseId and key is required"});if(!isValidObjectId(t))return s.status(400).send({status:!1,message:"Invalid purchaseId"});if(r!==n)return s.status(400).send({status:!1,message:"Not Authorized"});let i=await a.findById(t);if(!i)return s.status(400).send({status:!1,message:"Purchased course not found"});const d=e.body;return"amount"in d&&(i.amount=d.amount),"status"in d&&(i.status=d.status),"notes"in d&&(i.notes=d.notes),await i.save(),s.status(201).send({status:!0,message:"Details updated successfully",data:i})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in updatePurchasedCourseDetails API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},deletePurchaseDetails:async(e,s)=>{try{const{purchaseId:t,key:r}=e.params;return t&&r?isValidObjectId(t)?r!==n?s.status(400).send({status:!1,message:"Not Authorized"}):await a.deleteOne({_id:t})?s.status(201).send({status:!0,message:"Purchase details deleted successfully"}):s.status(400).send({status:!1,message:"Purchase details not found or already deleted"}):s.status(400).send({status:!1,message:"Invalid purchaseId"}):s.status(400).send({status:!1,message:"purchaseId and key is required"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in deletePurchaseDetails API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}}}},9506:(e,s,t)=>{const a=t(1935),r=(t(4406),t(8116)),i=t(3751),d=t(7013),{getCurrentIPAddress:n}=t(8093),u=t(3903),o=t(6928),l=t(9896),{port:c,adminSecretKey:m}=t(669),{isValidObjectId:g}=t(6037),p=t(4475);e.exports={getDashboard:async(e,s)=>{try{const{key:t,userId:a}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==m)return s.status(401).send({status:!1,message:"Not Authorized"});let n=null;a&&(n=await r.find({userId:a}).populate("courseId"));let u,o=await d.find({}),l=await i.findOne({});return l&&(u=l.bannerImages?l.bannerImages:null),s.status(200).send({status:!0,message:"Success",bannerImages:u||[],myAllPurchasedCourses:n,allCourses:o})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return p.error(`Error in getDashboard API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},getAdminDashboard:async(e,s)=>{try{let e=await r.find({}),t=0;for(let s of e)t+=s.amount;let n,u=await i.findOne({});u&&(n=u.bannerImages?u.bannerImages:null);let o={sale:t,courses:await d.find({}).countDocuments(),user:await a.find({}).countDocuments()};return s.status(200).send({status:!0,message:"Success",bannerImages:n||[],report:o})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return p.error(`Error in getAdminDashboard API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},updateBannerImages:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Bad Request!!!"});if(t!==m)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let a=await i.findOne({});a||(a=await i.create({bannerImages:[]}));let{ImageModel:r}=e.body,d=JSON.parse(r),g=e.files.bannerImage;if(!g)return s.status(400).send({status:!1,message:"No banner image uploaded"});let p=d.index,y=(d.img_id&&d.img_id,d.imageName,d.isNewPick),f=n(),h="/bannerImages/",I=u.v4()+"."+g.name.split(".").pop(),S=`http://${f}:${c}${h}`,_=o.join(__dirname,"..","..","bannerImages",I);if(y){g.mv(_,(e=>{if(e)throw e}));let e={imageName:I,imagePath:S};a.bannerImages.push(e),await a.save();let t=a.bannerImages;return s.status(200).send({status:!0,message:"Banner added successfully",data:t})}{let e=a.bannerImages[p].imageName,t=o.join(__dirname,"..","..","bannerImages",e);l.unlinkSync(t),g.mv(_,(e=>{if(e)throw e}));let r={imageName:I,imagePath:S};a.bannerImages[p]=r,await a.save();let i=a.bannerImages;return s.status(200).send({status:!0,message:"Banner updated successfully",data:i})}}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return p.error(`Error in updateBannerImages API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},deleteBannerImage:async(e,s)=>{try{let{imageId:t,key:a}=e.params;if(!t||!a)return s.status(400).send({status:!1,message:"All fields are required"});if(a!==m)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let r=await i.findOne();if(!r)return s.status(400).send({status:!1,message:"Not Found!!!"});if(r.bannerImages.length)for(let e=0;e<r.bannerImages.length;e++)if(t===r.bannerImages[e]._id.toString()){let s=r.bannerImages[e].imageName,t=o.join(__dirname,"..","..","bannerImages",s);l.existsSync(t)&&l.unlinkSync(t);let a=r.bannerImages;a.splice(e,1),r.bannerImages=a,await r.save()}let d=r.bannerImages;return s.status(200).send({status:!0,message:"Banner deleted successfully",data:d})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return p.error(`Error in deleteBannerImage API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}}}},5196:(e,s,t)=>{const a=t(9760),r=t(6928),i=t(9896),d=t(3903),{isValidObjectId:n}=t(6037);let{getCurrentIPAddress:u}=t(8093),{port:o,adminSecretKey:l}=t(669);const c=t(4475);e.exports={addTeacher:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==l)return s.status(401).send({status:!1,message:"Not authorized"});let{name:n,description:c}=e.body,m=null;if("FileUpload"in e.body){let{File_Extension:s,File_Path:t,File_data:a,File_name:n}=e.body.FileUpload,l=Buffer.from(a,"base64"),c=r.join(__dirname,"..","..","uploads");i.existsSync(c)||i.mkdirSync(c);let g=u(),p="/uploads/",y=d.v4()+s,f=`http://${g}:${o}${p}`,h=r.join(__dirname,"..","..","uploads",y);i.writeFileSync(h,l),m={fileName:y,filePath:f}}let g={name:n,description:c,profilePic:m},p=await a.create(g);return s.status(201).send({status:!0,message:"Teacher added successfully",data:p})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in addTeacher API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getAllTeachers:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==l)return s.status(401).send({status:!1,message:"Not authorized"});let r=await a.find({});return s.status(200).send({status:!0,message:"Success",data:r})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in getAllTeachers API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getTeacherById:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==l)return s.status(401).send({status:!1,message:"Not authorized"});const{teacherId:r}=e.params;if(!r)return s.status(400).send({status:!1,message:"TeacherId is required"});if(!n(r))return s.status(400).send({status:!1,message:"Invalid teacherId"});let i=await a.findById(r);return i?s.status(201).send({status:!0,message:"Success",data:i}):s.status(400).send({status:!1,message:"Teacher not found"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in getTeacherById API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},updateTeacher:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==l)return s.status(401).send({status:!1,message:"Not authorized"});const{teacherId:c}=e.params;if(!c)return s.status(400).send({status:!1,message:"TeacherId is required"});if(!n(c))return s.status(400).send({status:!1,message:"Invalid teacherId"});let m=await a.findById(c);if(!m)return s.status(400).send({status:!1,message:"Teacher not found"});let g=e.body;if("name"in g&&(m.name=g.name),"description"in g&&(m.description=g.description),"FileUpload"in g){let s=m.profilePic.fileName;if(s){let e=r.join(__dirname,"..","..","uploads",s);i.existsSync(e)&&i.unlinkSync(e)}let{File_Extension:t,File_Path:a,File_data:n,File_name:l}=e.body.FileUpload,c=Buffer.from(n,"base64"),g=r.join(__dirname,"..","..","uploads");i.existsSync(g)||i.mkdirSync(g);let p=u(),y="/uploads/",f=d.v4()+t,h=`http://${p}:${o}${y}`,I=r.join(__dirname,"..","..","uploads",f);i.writeFileSync(I,c);let S={fileName:f,filePath:h};m.profilePic=S}return await m.save(),s.status(201).send({status:!0,message:"Teacher data updated successfully",data:m})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in updateTeacher API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},deleteTeacher:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==l)return s.status(401).send({status:!1,message:"Not authorized"});const{teacherId:d}=e.params;if(!d)return s.status(400).send({status:!1,message:"TeacherId is required"});if(!n(d))return s.status(400).send({status:!1,message:"Invalid teacherId"});let u=await a.findById(d);if(!u)return s.status(400).send({status:!1,message:"Teacher not found"});let o=u.profilePic.fileName,c=r.join(__dirname,"..","..","uploads",o);return i.existsSync(c)&&i.unlinkSync(c),await a.deleteOne({_id:d}),s.status(201).send({status:!0,message:"Teacher deleted successfully"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in deleteTeacherById API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}}}},1579:(e,s,t)=>{const a=t(1935),r=(t(6107),t(2950)),{getCurrentIPAddress:i,generateRandomAlphaNumericID:d}=(t(3903),t(6928),t(9896),t(8093)),{port:n}=t(669),{isValidObjectId:u}=t(6037),{adminSecretKey:o}=t(669);e.exports={authenticateUser:async(e,s)=>{try{let{email:t,profilePic:r,name:i,userId:d}=e.body;const n=await a.findOne({userId:d});if(n)return s.status(200).send({status:!0,message:"Authentication successful",data:n});{let e={userId:d,name:i,email:t,profilePic:r},n=await a.create(e);return s.status(200).send({status:!0,message:"Authentication successful",data:n})}}catch(e){return s.status(400).send({status:!1,message:e.message})}},updateUser:async(e,s)=>{try{const{userId:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"userId is required"});let r=await a.findOne({userId:t});if(!r)return s.status(400).send({status:!1,message:"User not found"});let i=e.body;return"name"in i&&(r.name=i.name),"phone"in i&&(r.phone=i.phone),"gender"in i&&(r.gender=i.gender),"date_of_birth"in i&&(r.date_of_birth=i.date_of_birth),"Address"in i&&("address"in i.Address&&(r.Address.address=i.Address.address),"apartment"in i.Address&&(r.Address.apartment=i.Address.apartment),"city"in i.Address&&(r.Address.city=i.Address.city),"post_code"in i.Address&&(r.Address.post_code=i.Address.post_code),"state"in i.Address&&(r.Address.state=i.Address.state)),"education"in i&&(r.education=i.education),await r.save(),s.status(200).send({status:!0,message:"User updated successfully",data:r})}catch(e){return s.status(400).send({status:!1,message:e.message})}},deleteUser:async(e,s)=>{try{let{userId:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"userId is required"});let i=await a.findOne({userId:t});if(!i)return s.status(400).send({status:!1,message:"User not found"});const{reason:d,feedback:n}=e.body;let u={user:i,userAllBookings:await bookingModel.find({userId:t})},o=JSON.stringify(u);await a.deleteOne({userId:t});let l={userId:t,deletedUserData:o,reason:d,feedback:n,deletedAt:(new Date).toLocaleString()};return await r.create(l),s.status(200).send({status:!0,message:"User deleted successfully"})}catch(e){return s.status(400).send({status:!1,message:e.message})}},getUserById:async(e,s)=>{try{let{userId:t,key:r}=e.params;if(!t||!r)return s.status(400).send({status:!1,message:"All fields are required"});if(r!==o)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let i=await a.findOne({userId:t});return i?s.status(200).send({status:!0,message:"Success",data:i}):s.status(400).send({status:!1,message:"User not found"})}catch(e){return s.status(400).send({status:!1,message:e.message})}},getAllUsers:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==o)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let r=await a.find({});return s.status(200).send({status:!0,message:"Success",data:r})}catch(e){return s.status(400).send({status:!1,message:e.message})}}}},3797:e=>{class s extends Error{constructor(e,s,t,a){super(t),this.name=e,this.statusCode=s,this.details=a}}e.exports=s},3526:(e,s,t)=>{const{isValidObjectId:a}=t(6037),{tokenSecretKey:r}=t(669),i=t(6107),d=t(829);e.exports={Authentication:async(e,s,t)=>{try{let a=e.headers.authorization;if(!a)return s.status(400).send({status:!1,message:"Token is required"});let i,n=a.split(" ")[1];if(!n)return s.status(400).send({status:!1,message:"Invalid token"});d.verify(n,r,((s,a)=>{if(s)throw s;i=a;let r=i.adminId;e.adminId=r,t()}))}catch(e){return s.status(500).send({status:!1,message:e.message})}},Authorization:async(e,s,t)=>{try{let r=e.adminId,{adminId:d}=e.params;if(!a(d))return s.status(400).send({status:!1,message:"Invalid userId"});let n=await i.findById(d);if(!n)return s.status(404).send({status:!1,message:"Admin not found"});let u=n._id;if(r.toString()!==u.toString())return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});t()}catch(e){return s.status(500).send({status:!1,message:e.message})}}}},6107:(e,s,t)=>{const a=t(6037),r=(a.Schema.Types.ObjectId,new a.Schema({adminId:{type:String},sessionToken:{type:String},name:{type:String},email:{type:String},password:{type:String},mobile:{type:String},profilePic:{picName:{type:String},picPath:{type:String}}},{timestamps:!0}));e.exports=a.model("Admin",r)},3751:(e,s,t)=>{const a=t(6037),r=new a.Schema({bannerImages:[{imageName:{type:String,default:""},imagePath:{type:String,default:""}}]},{timestamps:!0});e.exports=a.model("BannerImage",r)},4406:(e,s,t)=>{const a=t(6037),r=(a.Schema.Types.ObjectId,new a.Schema({name:{type:String,default:""},description:{type:String,default:""},category_image:{fileName:{type:String,default:""},filePath:{type:String,default:""}},cat_enum:{type:String,enum:["",""]}},{timestamps:!0}));e.exports=a.model("Category",r)},2357:(e,s,t)=>{const a=t(6037),r=(a.Schema.Types.ObjectId,new a.Schema({courseId:{type:String,default:""},course_name:{type:String,default:""},meeting_link:{type:String,default:""},teacherId:{type:String,default:""},techer_name:{type:String,default:""},input_text:{type:String,default:""},pdf_upload_file:{fileName:{type:String,default:""},filePath:{type:String,default:""}},youtube_video_code:{type:String,default:""},status:{type:String,default:""}},{timestamps:!0}));e.exports=a.model("Class_Schedule",r)},7013:(e,s,t)=>{const a=t(6037),r=a.Schema.Types.ObjectId,i=new a.Schema({categoryId:{type:r,ref:"Category"},category_name:{type:String,default:""},course_name:{type:String,default:""},description:{type:String,default:""},course_fee:{type:Number,default:0},duration:{type:String,default:""},start_date:{type:String,default:""},end_date:{type:String,default:""},class_time:{type:String,default:""},course_image:{fileName:{type:String,default:""},filePath:{type:String,default:""}},course_seat_limit:{type:Number,default:0},offer_in_amount:{type:Number,default:0},course_type:{type:String,default:""}},{timestamps:!0});e.exports=a.model("Course",i)},8116:(e,s,t)=>{const a=t(6037),r=a.Schema.Types.ObjectId,i=new a.Schema({courseId:{type:r,ref:"Course"},userId:{type:String,default:""},amount:{type:Number,default:0},status:{type:String,default:""},notes:{type:String,default:""}},{timestamps:!0});e.exports=a.model("CoursePurchase",i)},2950:(e,s,t)=>{const a=t(6037),r=new a.Schema({userId:{type:String},deletedUserData:{type:String},reason:{type:String},feedback:{type:String},deletedAt:{type:String}},{timestamps:!0});e.exports=a.model("DeletedUser",r)},9760:(e,s,t)=>{const a=t(6037),r=(a.Schema.Types.ObjectId,new a.Schema({name:{type:String,default:""},profilePic:{fileName:{type:String,default:""},filePath:{type:String,default:""}},description:{type:String,default:""}},{timestamps:!0}));e.exports=a.model("Teacher",r)},1935:(e,s,t)=>{const a=t(6037),r=(a.Schema.Types.ObjectId,new a.Schema({userId:{type:String,unique:!0,default:""},name:{type:String,required:!0,trim:!0},profilePic:{type:String},gender:{type:String,enum:["MALE","FEMALE","OTHER","UNDEFINED"],default:"UNDEFINED"},Address:{address:{type:String,default:""},apartment:{type:String,default:""},city:{type:String,default:""},post_code:{type:String,default:""},state:{type:String,default:""}},email:{type:String,default:""},phone:{type:String,default:""},date_of_birth:{type:String,default:""},education:{type:String,default:""}},{timestamps:!0}));e.exports=a.model("User",r)},2508:(e,s,t)=>{const a=t(7252).Router(),{createAdmin:r,adminLogin:i,getAllBookingsOfUser:d}=t(6593),{Authentication:n,Authorization:u}=t(3526);a.post("/api/v1/createSuperAdmin",r),a.post("/api/v1/loginSuperAdmin",i),a.get("/api/v1/getUserAllBookings/:adminId/:sessionToken/:userId",d),e.exports=a},2683:(e,s,t)=>{const a=t(7252).Router(),{addCategory:r,getCategoryById:i,getProductByKeywords:d,getAllCategories:n,updateCategory:u,deleteCategory:o}=t(452);a.post("/api/v1/addCategory/:key",r),a.post("/api/v1/viewService/:categoryId",i),a.post("/api/v1/allProductSearchByKeywords",d),a.get("/api/v1/getAllCategories/:key",n),a.put("/api/v1/updateCategory/:key/:categoryId",u),a.delete("/api/v1/deleteCategory/:key/:categoryId",o),e.exports=a},6826:(e,s,t)=>{const a=t(7252).Router(),{addCourse:r,getAllCourses:i,updateCourse:d,deleteCourse:n,getCourseById:u,getAllClassesOfMyCourse:o}=t(9957);a.post("/api/v1/addCourse/:key",r),a.get("/api/v1/getCourse/:key/:courseId",u),a.get("/api/v1/getAllCourses/:key",i),a.put("/api/v1/updateCourse/:key/:courseId",d),a.delete("/api/v1/deleteCourse/:key/:courseId",n),a.get("/api/v1/getAllClassesOfMyCourse/:userId/:courseId",o),e.exports=a},6051:(e,s,t)=>{const a=t(7252).Router(),{getDashboard:r,updateBannerImages:i,deleteBannerImage:d,getAdminDashboard:n}=t(9506);a.get("/api/v1/getDashboard/:key/:userId?",r),a.get("/api/v1/getAdminDashboard/:key",n),a.put("/api/v1/addOrUpdateBanner/:key",i),a.delete("/api/v1/deleteBanner/:imageId/:key",d),e.exports=a},468:(e,s,t)=>{const a=t(7252).Router(),{purchaseCourse:r,getPurchasedCourse:i,getAllPurchasedCourses:d,updatePurchasedCourseDetails:n,deletePurchaseDetails:u,getMyAllPurchasedCourses:o,getAllUsersOfACourse:l}=t(3974);a.post("/api/v1/addPurchaseDetails/:userId",r),a.get("/api/v1/getPurchasedDetails/:key/:purchaseId",i),a.get("/api/v1/getMyAllPurchasedDetails/:key/:userId",o),a.get("/api/v1/getAllPurchasedDetails/:key",d),a.put("/api/v1/updatePurchasedDetails/:key/:purchaseId",n),a.delete("/api/v1/deletePurchaseDetails/:key/:purchaseId",u),a.get("/api/v1/getAllUsersOfACourse/:key/:courseId",l),e.exports=a},8738:(e,s,t)=>{const a=t(7252).Router(),{createClassSchedule:r,getAllClassSchedule:i,getSchedule:d,updateSchedule:n,deleteSchedule:u}=t(8295);a.post("/api/v1/createSchedule/:key",r),a.get("/api/v1/getSchedule/:key/:courseId",d),a.get("/api/v1/getAllClassSchedule/:key",i),a.put("/api/v1/updateSchedule/:key/:courseId",n),a.delete("/api/v1/deletSchedule/:key/:courseId",u),e.exports=a},1901:(e,s,t)=>{const a=t(7252).Router(),{addTeacher:r,getAllTeachers:i,getTeacherById:d,updateTeacher:n,deleteTeacher:u}=t(5196);a.post("/api/v1/addTeacher/:key",r),a.get("/api/v1/getTeacher/:key/:teacherId",d),a.get("/api/v1/getAllTeachers/:key",i),a.put("/api/v1/updateTeacher/:key/:teacherId",n),a.delete("/api/v1/deletTeacher/:key/:teacherId",u),e.exports=a},9768:(e,s,t)=>{const a=t(7252).Router(),{authenticateUser:r,updateUser:i,getAllUsers:d,getUserById:n,deleteUser:u}=t(1579);a.post("/api/v1/authenticateUser",r),a.get("/api/v1/getUser/:userId/:key",n),a.get("/api/v1/users/:key",d),a.post("/api/v1/updateUser/:userId",i),a.delete("/api/v1/deleteUser/:userId",u),a.get("/api/v1/getAllUsers",d),e.exports=a},7048:(e,s,t)=>{const a=t(3797),{StatusCodes:r}=t(7138);e.exports={errorHandler:function(e,s,t,i){return e instanceof a?t.status(e.statusCode).json({success:!1,message:e.message,err:e.details,data:{}}):t.status(r.INTERNAL_SERVER_ERROR).json({success:!1,message:"Something went wrong",err:e,data:{}})}}},8093:(e,s,t)=>{const a=t(857);e.exports={getCurrentIPAddress:()=>{let e=a.networkInterfaces();return Object.values(e).flat().filter((e=>"IPv4"===e.family&&!e.internal)).map((e=>e.address))[0]},generateRandomAlphaNumericID:function(e){let s="";for(let t=0;t<e;t++)s+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"[Math.floor(62*Math.random())];return s}}},5486:e=>{"use strict";e.exports=require("bcrypt")},3268:e=>{"use strict";e.exports=require("body-parser")},7174:e=>{"use strict";e.exports=require("compression")},8577:e=>{"use strict";e.exports=require("cors")},818:e=>{"use strict";e.exports=require("dotenv")},7252:e=>{"use strict";e.exports=require("express")},6376:e=>{"use strict";e.exports=require("express-fileupload")},2239:e=>{"use strict";e.exports=require("express-mongo-sanitize")},2525:e=>{"use strict";e.exports=require("helmet")},8900:e=>{"use strict";e.exports=require("hpp")},7138:e=>{"use strict";e.exports=require("http-status-codes")},829:e=>{"use strict";e.exports=require("jsonwebtoken")},6037:e=>{"use strict";e.exports=require("mongoose")},3903:e=>{"use strict";e.exports=require("uuid")},5124:e=>{"use strict";e.exports=require("winston")},8639:e=>{"use strict";e.exports=require("winston-mongodb")},9896:e=>{"use strict";e.exports=require("fs")},857:e=>{"use strict";e.exports=require("os")},6928:e=>{"use strict";e.exports=require("path")}},s={};function t(a){var r=s[a];if(void 0!==r)return r.exports;var i=s[a]={exports:{}};return e[a](i,i.exports,t),i.exports}const a=t(7252),r=t(3268),i=t(6376),d=t(8577),n=t(2525),u=t(7174),o=t(2239),l=t(8900),{port:c}=t(669),{connectToDatabase:m}=t(6865),{errorHandler:g}=t(7048),p=a();p.use(n()),p.use(d()),p.use(u()),p.use(o()),p.use(l()),p.use(a.json({limit:"50mb"})),p.use(a.urlencoded({extended:!0,limit:"50mb"})),p.use(r.json({limit:"50mb"})),p.use(r.text()),p.use(i()),p.use(d());const y=t(2508),f=t(6826),h=t(9768),I=t(2683),S=t(6051),_=t(468),k=t(8738),A=t(1901);p.use(n.contentSecurityPolicy({directives:{defaultSrc:["'self'"],scriptSrc:["'self'","'unsafe-inline'"],objectSrc:["'none'"],upgradeInsecureRequests:[]}})),p.use(n.hsts({maxAge:31536e3,includeSubDomains:!0,preload:!0})),p.use("/userImages",a.static(__dirname+"/userImages")),p.use("/categoryImages",a.static(__dirname+"/categoryImages/")),p.use("/bannerImages",a.static(__dirname+"/bannerImages")),p.use("/courseImages",a.static(__dirname+"/courseImages")),p.use("/class_pdf",a.static(__dirname+"/class_pdf")),p.use("/uploads",a.static(__dirname+"/uploads")),p.use("/",y),p.use("/",f),p.use("/",h),p.use("/",I),p.use("/",S),p.use("/",_),p.use("/",k),p.use("/",A),p.get("/",((e,s)=>{s.send("<h1>Coaching App is Up and Running</h1>")})),p.use(g);const w=p.listen(c,(async()=>{console.log("App is running on port",c),await m}));process.on("unhandledRejection",((e,s)=>{console.error("Unhandled Rejection at:",s,"reason:",e),w.close((()=>{process.exit(1)}))})),process.on("uncaughtException",(e=>{console.error("Uncaught Exception thrown:",e),w.close((()=>{process.exit(1)}))})),process.on("SIGTERM",(()=>{console.log("SIGTERM signal received: closing HTTP server"),w.close((()=>{console.log("HTTP server closed"),process.exit(0)}))})),process.on("SIGINT",(()=>{console.log("SIGINT signal received: closing HTTP server"),w.close((()=>{console.log("HTTP server closed"),process.exit(0)}))}))})();
=======
(()=>{var e={669:(e,s,t)=>{t(818).config(),e.exports={mongoDbUrl:process.env.MONGO_DB_URL,logDbUrl:process.env.LOG_DB_URL,tokenSecretKey:process.env.JWT_SECRET,port:process.env.PORT,adminSecretKey:process.env.ADMIN_SECRET_KEY}},6865:(e,s,t)=>{const a=t(6037),{mongoDbUrl:r}=t(669);a.connect(r,{maxPoolSize:4});const i=a.connection;i.on("error",console.error.bind(console,"connection error:")),i.once("open",(()=>{console.log("Databse connected")})),e.exports=i},4475:(e,s,t)=>{const a=t(5124);t(8639);const r=[];r.push(new a.transports.File({filename:"app.log"}));const i=a.createLogger({format:a.format.combine(a.format.timestamp({format:"YYYY-MM-DD HH:mm:ss"}),a.format.printf((e=>`${e.timestamp} [${e.level.toUpperCase()}]: ${e.message} ${e.meta?JSON.stringify(e.meta):""}`))),transports:r,defaultMeta:{service:"user-service"}});e.exports=i},6593:(e,s,t)=>{const a=t(6107),r=t(829),i=t(5486),d=t(3903),n=t(6928),{getCurrentIPAddress:u,generateRandomAlphaNumericID:o}=t(8093),{port:l,tokenSecretKey:c}=t(669),m=t(1935);e.exports={createAdmin:async(e,s)=>{try{let{name:t,email:r,password:c,mobile:m}=e.body;if(!(t&&r&&c&&m))return s.status(400).send({status:!1,message:"All fields are required"});let{profilePic:g}=e.files;if(!g)return s.status(400).send({status:!1,message:"No profile pic uploaded"});c=await i.hash(c,10);let p=u(),y="/adminImages/",f=d.v4()+"."+g.name.split(".").pop(),h=`http://${p}:${l}${y}`,I=n.join(__dirname,"..","..","adminImages",f);g.mv(I,(e=>{e&&console.log(e)})),picObj={picName:f,picPath:h};let _={adminId:o(26),sessionToken:o(51),name:t,email:r,password:c,mobile:m,profilePic:picObj},S=await a.create(_);return s.status(201).send({status:!0,message:"Admin created",data:S})}catch(e){return s.status(500).send({status:!1,message:e.message})}},adminLogin:async(e,s)=>{try{let{email:t,password:d}=e.body;if(!t||!d)return s.status(400).send({status:!1,message:"Email and password are required"});let n=await a.findOne({email:t});if(!n)return s.status(400).send({status:!1,message:"Bad Reques!!!"});i.compare(d,n.password,(function(e,a){if(e)throw e;!async function(e){if(e){let e={},a=Date.now(),i=Math.floor(a/1e3),d=r.sign({email:n.email,adminId:n._id.toString(),iat:i},c,{expiresIn:"24h"});return e._id=n._id.toString(),e.email=t,e.token=d,s.setHeader("Authorization","Bearer",d),n.sessionToken=o(51),await n.save(),s.status(200).send({status:!0,message:"Successfully login",data:e})}s.status(401).send({status:!1,message:"Login denied"})}(a)}))}catch(e){return s.status(500).send({status:!1,message:e.message})}},getAllBookingsOfUser:async(e,s)=>{try{const{adminId:t,sessionToken:r,userId:i}=e.params;if(!t||!r)return s.status(400).send({status:!1,message:"All fields are required"});let d=await a.findOne({adminId:t,sessionToken:r});if(!d)return s.status(404).send({status:!1,message:"Bad Reques!!!"});if(d.adminId===t&&d.sessionToken===r){if(!await m.findOne({userId:i}))return s.status(404).send({status:!1,message:"User Not Found"});let e=await bookingModel.find({userId:i});return s.status(200).send({status:!0,message:"Success",data:e})}return s.status(400).send({status:!1,message:"Session Expired"})}catch(e){return s.status(500).send({status:!1,message:e.message})}}}},452:(e,s,t)=>{const a=t(4406);let{getCurrentIPAddress:r}=t(8093);const i=t(3903),d=t(6928),n=t(9896),{port:u,adminSecretKey:o}=t(669),{isValidObjectId:l}=t(6037),c=t(4475);e.exports={addCategory:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==o)return s.status(401).send({status:!1,message:"Not authorized"});let{name:l,description:c}=e.body;if(!l||!c)return s.status(400).send({status:!1,message:"All fields are required"});let{File_Extension:m,File_Path:g,File_data:p,File_name:y}=e.body.FileUpload,f=Buffer.from(p,"base64"),h=d.join(__dirname,"..","..","categoryImages");n.existsSync(h)||n.mkdirSync(h);let I=r(),_="/categoryImages/",S=i.v4()+m,k=`http://${I}:${u}${_}`,A=d.join(__dirname,"..","..","categoryImages",S);n.writeFileSync(A,f);let w={name:l,description:c,category_image:{fileName:S,filePath:k}},v=await a.create(w);return s.status(200).send({status:!0,message:"Category Added",data:v})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in addCategory API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},getCategoryById:async(e,s)=>{try{let t,{categoryId:r}=e.params;if(r){if(!l(r))return s.status(400).send({status:!1,message:"Invalid category Id"});t=await a.findById(r)}if(!t)return s.status(200).send({status:!0,message:"Category Not Found"});let i=await productModel.find({category:t._id});return s.status(200).send({status:!0,message:"Success",data:t,products:i})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in getCategoryById API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},getProductByKeywords:async(e,s)=>{try{let{service_search:t}=e.body;if(!t)return s.status(400).send({status:!1,message:"Search parameter is required"});let a={$or:[{name:{$regex:t,$options:"i"}},{subTitle:{$regex:t,$options:"i"}},{description:{$regex:t,$options:"i"}}]},r=await productModel.find(a);return s.status(200).send({status:!0,message:"Success",products:r})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in getProductByKeywords API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},getAllCategories:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Bad Request!!!"});if(t!==o)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let r=await a.find({});return s.status(200).send({status:!0,message:"Success",data:r})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in getAllCategories API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},updateCategory:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Bad Request!!!"});if(t!==o)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let{categoryId:c}=e.params;if(!c)return s.status(400).send({status:!1,message:"Category Id is required"});if(!l(c))return s.status(400).send({status:!1,message:"Invalid Category Id"});let m=await a.findById(c);if(!m)return s.status(404).send({status:!1,message:"Category Not Found"});let g=e.body;if("name"in g&&(m.name=g.name),"description"in g&&(m.description=g.description),"FileUpload"in g){let{File_Extension:s,File_Path:t,File_data:a,File_name:o}=e.body.FileUpload,l=Buffer.from(a,"base64"),c=r(),g="/categoryImages/",p=i.v4()+s,y=`http://${c}:${u}${g}`,f=d.join(__dirname,"..","..","categoryImages",p),h=m.category_image.fileName,I=d.join(__dirname,"..","..","categoryImages",h);n.existsSync(I)&&n.unlinkSync(I),n.writeFileSync(f,l);let _={fileName:p,filePath:y};m.category_image=_}return await m.save(),s.status(200).send({status:!0,message:"Category updated successfully",data:m})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in updateCategory API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},deleteCategory:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Bad Request!!!"});if(t!==o)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let{categoryId:r}=e.params;return r?await a.findById(r)?(await a.deleteOne({_id:r}),s.status(200).send({status:!0,message:"Category deleted successfully"})):s.status(404).send({status:!1,message:"No category found with this category Id"}):s.status(400).send({status:!1,message:"CategoryId is required"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in deleteCategory API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}}}},8295:(e,s,t)=>{const a=t(4475),r=t(2357),i=(t(7013),t(6928)),d=t(9896),n=t(3903),{isValidObjectId:u}=t(6037);let{getCurrentIPAddress:o}=t(8093),{port:l,adminSecretKey:c}=t(669);e.exports={createClassSchedule:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==c)return s.status(401).send({status:!1,message:"Not Authorized"});const{courseId:a,course_name:u,meeting_link:m,teacherId:g,techer_name:p,input_text:y,youtube_video_code:f,status:h}=e.body;let I=null;if("FileUpload"in e.body){let{File_Extension:s,File_Path:t,File_data:a,File_name:r}=e.body.FileUpload,u=Buffer.from(a,"base64"),c=i.join(__dirname,"..","..","class_pdf");d.existsSync(c)||d.mkdirSync(c);let m=o(),g="/class_pdf/",p=n.v4()+s,y=`http://${m}:${l}${g}`,f=i.join(__dirname,"..","..","class_pdf",p);d.writeFileSync(f,u),I={fileName:p,filePath:y}}const _={courseId:a,course_name:u,meeting_link:m,teacherId:g,techer_name:p,input_text:y,pdf_upload_file:I,youtube_video_code:f,status:h};let S=await r.create(_);return s.status(201).send({status:!0,message:"Class schedule created successfully",data:S})}catch(t){let r={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return a.error(`Error in createClassSchedule API: ${t.message}`,{meta:r}),s.status(500).send({status:!1,message:t.message})}},getAllClassSchedule:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==c)return s.status(401).send({status:!1,message:"Not Authorized"});const a=await r.find({});return s.status(201).send({status:!0,message:"Class schedule created successfully",data:a})}catch(t){let r={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return a.error(`Error in getAllClassSchedule API: ${t.message}`,{meta:r}),s.status(500).send({status:!1,message:t.message})}},getSchedule:async(e,s)=>{try{const{courseId:t,key:a}=e.params;if(!t||!a)return s.status(400).send({status:!1,message:"CourseId and key are required"});if(a!==c)return s.status(401).send({status:!1,message:"Not Authorized"});if(!u(t))return s.status(400).send({status:!1,message:"Invalid courseId"});let i=await r.findById(t);return i?s.status(201).send({status:!0,message:"Success",data:i}):s.status(400).send({status:!1,message:"Class schedule not found"})}catch(t){let r={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return a.error(`Error in getSchedule API: ${t.message}`,{meta:r}),s.status(500).send({status:!1,message:t.message})}},updateSchedule:async(e,s)=>{try{const{courseId:t,key:a}=e.params;if(!t||!a)return s.status(400).send({status:!1,message:"CourseId and key are required"});if(a!==c)return s.status(401).send({status:!1,message:"Not Authorized"});if(!u(t))return s.status(400).send({status:!1,message:"Invalid courseId"});let m=await r.findById(t);if(!m)return s.status(400).send({status:!1,message:"Class schedule not found"});const g=e.body;if("course_name"in g&&(m.course_name=g.course_name),"meeting_link"in g&&(m.meeting_link=g.meeting_link),"techer_name"in g&&(m.techer_name=g.techer_name),"input_text"in g&&(m.input_text=g.input_text),"youtube_video_code"in g&&(m.youtube_video_code=g.youtube_video_code),"status"in g&&(m.status=g.status),"FileUpload"in e.body){let s=m.pdf_upload_file.fileName;if(s){let e=i.join(__dirname,"..","..","class_pdf",s);d.existsSync(e)&&d.unlinkSync(e)}let{File_Extension:t,File_Path:a,File_data:r,File_name:u}=e.body.FileUpload,c=Buffer.from(r,"base64"),g=o(),p="/class_pdf/",y=n.v4()+t,f=`http://${g}:${l}${p}`,h=i.join(__dirname,"..","..","class_pdf",y);d.writeFileSync(h,c);let I={fileName:y,filePath:f};m.pdf_upload_file=I}return await m.save(),s.status(201).send({status:!0,message:"Schedule updated successfully",data:m})}catch(t){let r={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return a.error(`Error in updateSchedule API: ${t.message}`,{meta:r}),s.status(500).send({status:!1,message:t.message})}},deleteSchedule:async(e,s)=>{try{const{courseId:t,key:a}=e.params;if(!t||!a)return s.status(400).send({status:!1,message:"CourseId is required"});if(a!==c)return s.status(401).send({status:!1,message:"Not Authorized"});if(!u(t))return s.status(400).send({status:!1,message:"Invalid courseId"});let n=await r.findById(t);if(!n)return s.status(400).send({status:!1,message:"Class schedule not found"});let o=n.pdf_upload_file.fileName;if(o){let e=i.join(__dirname,"..","..","class_pdf",o);d.existsSync(e)&&d.unlinkSync(e)}return await r.deleteOne({courseId:t})?s.status(201).send({status:!0,message:"Schedule deleted successfully"}):s.status(404).send({status:!1,message:"Schedule not found or alrady deleted"})}catch(t){let r={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return a.error(`Error in deleteSchedule API: ${t.message}`,{meta:r}),s.status(500).send({status:!1,message:t.message})}}}},9957:(e,s,t)=>{const a=t(7013),r=t(2357),i=t(8116),d=t(1935),n=t(6928),u=t(9896),o=t(3903),l=t(4475),{isValidObjectId:c}=t(6037);let{getCurrentIPAddress:m}=t(8093),{port:g,adminSecretKey:p}=t(669);e.exports={addCourse:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==p)return s.status(401).send({status:!1,message:"Not Authorized"});const{categoryId:r,category_name:i,course_name:d,description:l,course_fee:c,duration:y,start_date:f,end_date:h,class_time:I,course_seat_limit:_,offer_in_amount:S,course_type:k}=e.body;let A=null;if("FileUpload"in e.body){let{File_Extension:s,File_Path:t,File_data:a,File_name:r}=e.body.FileUpload,i=Buffer.from(a,"base64"),d=n.join(__dirname,"..","..","courseImages");u.existsSync(d)||u.mkdirSync(d);let l=m(),c="/courseImages/",p=o.v4()+s,y=`http://${l}:${g}${c}`,f=n.join(__dirname,"..","..","courseImages",p);u.writeFileSync(f,i),A={fileName:p,filePath:y}}let w={categoryId:r,category_name:i,course_name:d,description:l,course_fee:c,duration:y,start_date:f,end_date:h,class_time:I,course_seat_limit:_,offer_in_amount:S,course_type:k,course_image:A},v=await a.create(w);return s.status(201).send({status:!0,message:"Course created successfully",data:v})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in addCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getAllCourses:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==p)return s.status(401).send({status:!1,message:"Not Authorized"});let r=await a.find({});return s.status(201).send({status:!0,message:"Success",data:r})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in getAllCourses API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getCourseById:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==p)return s.status(401).send({status:!1,message:"Not Authorized"});const{courseId:r}=e.params;if(!r)return s.status(400).send({status:!1,message:"CourseId is required"});if(!c(r))return s.status(400).send({status:!1,message:"Invalid courseId"});let i=await a.findById(r);return i?s.status(201).send({status:!0,message:"Success",data:i}):s.status(400).send({status:!1,message:"Course not found"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in getCourseById API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},updateCourse:async(e,s)=>{try{const{key:t,courseId:r}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==p)return s.status(401).send({status:!1,message:"Not Authorized"});if(!r)return s.status(400).send({status:!1,message:"CourseId is required"});if(!c(r))return s.status(400).send({status:!1,message:"Invalid courseId"});let i=await a.findById(r);if(!i)return s.status(400).send({status:!1,message:"Course not found"});let d=e.body;if("category_name"in d&&(i.category_name=d.category_name),"course_name"in d&&(i.course_name=d.course_name),"description"in d&&(i.description=d.description),"course_fee"in d&&(i.course_fee=d.course_fee),"duration"in d&&(i.duration=d.duration),"start_date"in d&&(i.start_date=d.start_date),"end_date"in d&&(i.end_date=d.end_date),"class_time"in d&&(i.class_time=d.class_time),"course_seat_limit"in d&&(i.course_seat_limit=d.course_seat_limit),"offer_in_amount"in d&&(i.offer_in_amount=d.offer_in_amount),"course_type"in d&&(i.course_type=d.course_type),"FileUpload"in e.body){let s=i.course_image.fileName;if(s){let e=n.join(__dirname,"..","..","courseImages",s);u.existsSync(e)&&u.unlinkSync(e)}let{File_Extension:t,File_Path:a,File_data:r,File_name:d}=e.body.FileUpload,l=Buffer.from(r,"base64"),c=m(),p="/courseImages/",y=o.v4()+t,f=`http://${c}:${g}${p}`,h=n.join(__dirname,"..","..","courseImages",y);u.writeFileSync(h,l);let I={fileName:y,filePath:f};i.course_image=I}return await i.save(),s.status(200).send({status:!0,message:"Course updated successfully",data:i})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in updateCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},deleteCourse:async(e,s)=>{try{const{courseId:t,key:r}=e.params;if(!t||!r)return s.status(400).send({status:!1,message:"CourseId and key are required"});if(r!==p)return s.status(401).send({status:!1,message:"Not Authorized"});if(!c(t))return s.status(400).send({status:!1,message:"Invalid courseId"});let i=await a.findById(t);if(!i)return s.status(400).send({status:!1,message:"Course not found"});let d=i.course_image.fileName;if(d){let e=n.join(__dirname,"..","..","courseImages",d);u.existsSync(e)&&u.unlinkSync(e)}return await a.deleteOne({_id:t}),s.status(200).send({status:!0,message:"Course deleted successfully"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in deleteCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getAllClassesOfMyCourse:async(e,s)=>{try{const{userId:t,courseId:n}=e.params;if(!t||!n)return s.status(400).send({status:!1,message:"All fields are required"});if(!await d.findOne({userId:t}))return s.status(400).send({status:!1,message:"User not found"});if(!await a.findById(n))return s.status(400).send({status:!1,message:"Course not found"});let u=await i.findOne({userId:t,courseId:n}),o=await r.find({courseId:u.courseId});return s.status(200).send({status:!0,message:"success",data:o})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return l.error(`Error in updateCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}}}},3974:(e,s,t)=>{const a=t(8116),r=t(1935),i=t(7013),d=t(4475),{adminSecretKey:n}=t(669);e.exports={purchaseCourse:async(e,s)=>{try{let{userId:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});let{courseId:r,amount:i,status:d,notes:n}=e.body,u={courseId:r,amount:i,status:d,userId:t,notes:n},o=await a.create(u);return s.status(201).send({status:!0,message:"Course purchased successfully",data:o})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in purchaseCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getPurchasedCourse:async(e,s)=>{try{const{key:t,purchaseId:r}=e.params;if(!t||!r)return s.status(400).send({status:!1,message:"purchaseId and key is required"});if(!isValidObjectId(r))return s.status(400).send({status:!1,message:"Invalid purchaseId"});let i=await a.findById(r);return i?s.status(201).send({status:!0,message:"Success",data:i}):s.status(400).send({status:!1,message:"Purchased course not found"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in getPurchasedCourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getAllPurchasedCourses:async(e,s)=>{try{const{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==n)return s.status(400).send({status:!1,message:"Not Authorized"});let d=await a.find({}),u=[];for(let e of d){let s={purchaseDetails:e,user:await r.findOne({userId:e.userId}),course:await i.findOne({_id:e.courseId})};u.push(s)}return s.status(201).send({status:!0,message:"Success",data:u})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in getAllPurchasedCourses API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getMyAllPurchasedCourses:async(e,s)=>{try{const{key:t,userId:r}=e.params;if(!r||!t)return s.status(400).send({status:!1,message:"userId and key is required"});if(t!==n)return s.status(400).send({status:!1,message:"Not Authorized"});let i=await a.find({userId:r});return s.status(201).send({status:!0,message:"Success",data:i})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in getAllPurchasedCourses API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getAllUsersOfACourse:async(e,s)=>{try{const{courseId:t,key:d}=e.params;if(!t||!d)return s.status(400).send({status:!1,message:"All fields are required"});let n=await i.findById(t);if(!n)return s.status(400).send({status:!1,message:"Course Not Found"});let u=await a.find({courseId:t}),o=[];for(let e of u){let s=await r.findOne({userId:e.userId});o.push(s)}return s.status(201).send({status:!0,message:"Success",course:n,users:o})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in getAllUsersOfACourse API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},updatePurchasedCourseDetails:async(e,s)=>{try{const{purchaseId:t,key:r}=e.params;if(!t||!r)return s.status(400).send({status:!1,message:"purchaseId and key is required"});if(!isValidObjectId(t))return s.status(400).send({status:!1,message:"Invalid purchaseId"});if(r!==n)return s.status(400).send({status:!1,message:"Not Authorized"});let i=await a.findById(t);if(!i)return s.status(400).send({status:!1,message:"Purchased course not found"});const d=e.body;return"amount"in d&&(i.amount=d.amount),"status"in d&&(i.status=d.status),"notes"in d&&(i.notes=d.notes),await i.save(),s.status(201).send({status:!0,message:"Details updated successfully",data:i})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in updatePurchasedCourseDetails API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},deletePurchaseDetails:async(e,s)=>{try{const{purchaseId:t,key:r}=e.params;return t&&r?isValidObjectId(t)?r!==n?s.status(400).send({status:!1,message:"Not Authorized"}):await a.deleteOne({_id:t})?s.status(201).send({status:!0,message:"Purchase details deleted successfully"}):s.status(400).send({status:!1,message:"Purchase details not found or already deleted"}):s.status(400).send({status:!1,message:"Invalid purchaseId"}):s.status(400).send({status:!1,message:"purchaseId and key is required"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in deletePurchaseDetails API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}}}},9506:(e,s,t)=>{const a=t(1935),r=(t(4406),t(8116)),i=t(3751),d=t(7013),{getCurrentIPAddress:n}=t(8093),u=t(3903),o=t(6928),l=t(9896),{port:c,adminSecretKey:m}=t(669),{isValidObjectId:g}=t(6037),p=t(4475);e.exports={getDashboard:async(e,s)=>{try{const{key:t,userId:a}=e.params;if(!t)return s.status(400).send({status:!1,message:"Key is required"});if(t!==m)return s.status(401).send({status:!1,message:"Not Authorized"});let d=null;a&&(d=await r.find({userId:a}).populate("courseId"));let n,u=await i.findOne({});return u&&(n=u.bannerImages?u.bannerImages:null),s.status(200).send({status:!0,message:"Success",bannerImages:n||[],myAllPurchasedCourses:d})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return p.error(`Error in getDashboard API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},getAdminDashboard:async(e,s)=>{try{let e=await r.find({}),t=0;for(let s of e)t+=s.amount;let n,u=await i.findOne({});u&&(n=u.bannerImages?u.bannerImages:null);let o={sale:t,courses:await d.find({}).countDocuments(),user:await a.find({}).countDocuments()};return s.status(200).send({status:!0,message:"Success",bannerImages:n||[],report:o})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return p.error(`Error in getAdminDashboard API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},updateBannerImages:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"Bad Request!!!"});if(t!==m)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let a=await i.findOne({});a||(a=await i.create({bannerImages:[]}));let{ImageModel:r}=e.body,d=JSON.parse(r),g=e.files.bannerImage;if(!g)return s.status(400).send({status:!1,message:"No banner image uploaded"});let p=d.index,y=(d.img_id&&d.img_id,d.imageName,d.isNewPick),f=n(),h="/bannerImages/",I=u.v4()+"."+g.name.split(".").pop(),_=`http://${f}:${c}${h}`,S=o.join(__dirname,"..","..","bannerImages",I);if(y){g.mv(S,(e=>{if(e)throw e}));let e={imageName:I,imagePath:_};a.bannerImages.push(e),await a.save();let t=a.bannerImages;return s.status(200).send({status:!0,message:"Banner added successfully",data:t})}{let e=a.bannerImages[p].imageName,t=o.join(__dirname,"..","..","bannerImages",e);l.unlinkSync(t),g.mv(S,(e=>{if(e)throw e}));let r={imageName:I,imagePath:_};a.bannerImages[p]=r,await a.save();let i=a.bannerImages;return s.status(200).send({status:!0,message:"Banner updated successfully",data:i})}}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return p.error(`Error in updateBannerImages API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}},deleteBannerImage:async(e,s)=>{try{let{imageId:t,key:a}=e.params;if(!t||!a)return s.status(400).send({status:!1,message:"All fields are required"});if(a!==m)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let r=await i.findOne();if(!r)return s.status(400).send({status:!1,message:"Not Found!!!"});if(r.bannerImages.length)for(let e=0;e<r.bannerImages.length;e++)if(t===r.bannerImages[e]._id.toString()){let s=r.bannerImages[e].imageName,t=o.join(__dirname,"..","..","bannerImages",s);l.existsSync(t)&&l.unlinkSync(t);let a=r.bannerImages;a.splice(e,1),r.bannerImages=a,await r.save()}let d=r.bannerImages;return s.status(200).send({status:!0,message:"Banner deleted successfully",data:d})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return p.error(`Error in deleteBannerImage API: ${t.message}`,{meta:a}),s.status(400).send({status:!1,message:t.message})}}}},5196:(e,s,t)=>{const a=t(9760),r=t(6928),i=t(9896),d=t(3903),{isValidObjectId:n}=t(6037);let{getCurrentIPAddress:u}=t(8093),{port:o,adminSecretKey:l}=t(669);const c=t(4475);e.exports={addTeacher:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==l)return s.status(401).send({status:!1,message:"Not authorized"});let{name:n,description:c}=e.body,m=null;if("FileUpload"in e.body){let{File_Extension:s,File_Path:t,File_data:a,File_name:n}=e.body.FileUpload,l=Buffer.from(a,"base64"),c=r.join(__dirname,"..","..","uploads");i.existsSync(c)||i.mkdirSync(c);let g=u(),p="/uploads/",y=d.v4()+s,f=`http://${g}:${o}${p}`,h=r.join(__dirname,"..","..","uploads",y);i.writeFileSync(h,l),m={fileName:y,filePath:f}}let g={name:n,description:c,profilePic:m},p=await a.create(g);return s.status(201).send({status:!0,message:"Teacher added successfully",data:p})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in addTeacher API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getAllTeachers:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==l)return s.status(401).send({status:!1,message:"Not authorized"});let r=await a.find({});return s.status(200).send({status:!0,message:"Success",data:r})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in getAllTeachers API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},getTeacherById:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==l)return s.status(401).send({status:!1,message:"Not authorized"});const{teacherId:r}=e.params;if(!r)return s.status(400).send({status:!1,message:"TeacherId is required"});if(!n(r))return s.status(400).send({status:!1,message:"Invalid teacherId"});let i=await a.findById(r);return i?s.status(201).send({status:!0,message:"Success",data:i}):s.status(400).send({status:!1,message:"Teacher not found"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in getTeacherById API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},updateTeacher:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==l)return s.status(401).send({status:!1,message:"Not authorized"});const{teacherId:c}=e.params;if(!c)return s.status(400).send({status:!1,message:"TeacherId is required"});if(!n(c))return s.status(400).send({status:!1,message:"Invalid teacherId"});let m=await a.findById(c);if(!m)return s.status(400).send({status:!1,message:"Teacher not found"});let g=e.body;if("name"in g&&(m.name=g.name),"description"in g&&(m.description=g.description),"FileUpload"in g){let s=m.profilePic.fileName;if(s){let e=r.join(__dirname,"..","..","uploads",s);i.existsSync(e)&&i.unlinkSync(e)}let{File_Extension:t,File_Path:a,File_data:n,File_name:l}=e.body.FileUpload,c=Buffer.from(n,"base64"),g=r.join(__dirname,"..","..","uploads");i.existsSync(g)||i.mkdirSync(g);let p=u(),y="/uploads/",f=d.v4()+t,h=`http://${p}:${o}${y}`,I=r.join(__dirname,"..","..","uploads",f);i.writeFileSync(I,c);let _={fileName:f,filePath:h};m.profilePic=_}return await m.save(),s.status(201).send({status:!0,message:"Teacher data updated successfully",data:m})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in updateTeacher API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}},deleteTeacher:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==l)return s.status(401).send({status:!1,message:"Not authorized"});const{teacherId:d}=e.params;if(!d)return s.status(400).send({status:!1,message:"TeacherId is required"});if(!n(d))return s.status(400).send({status:!1,message:"Invalid teacherId"});let u=await a.findById(d);if(!u)return s.status(400).send({status:!1,message:"Teacher not found"});let o=u.profilePic.fileName,c=r.join(__dirname,"..","..","uploads",o);return i.existsSync(c)&&i.unlinkSync(c),await a.deleteOne({_id:d}),s.status(201).send({status:!0,message:"Teacher deleted successfully"})}catch(t){let a={stack:t.stack,details:t.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return c.error(`Error in deleteTeacherById API: ${t.message}`,{meta:a}),s.status(500).send({status:!1,message:t.message})}}}},1579:(e,s,t)=>{const a=t(1935),r=(t(6107),t(2950)),{getCurrentIPAddress:i,generateRandomAlphaNumericID:d}=(t(3903),t(6928),t(9896),t(8093)),{port:n}=t(669),{isValidObjectId:u}=t(6037),{adminSecretKey:o}=t(669);e.exports={authenticateUser:async(e,s)=>{try{let{email:t,profilePic:r,name:i,userId:d}=e.body;const n=await a.findOne({userId:d});if(n)return s.status(200).send({status:!0,message:"Authentication successful",data:n});{let e={userId:d,name:i,email:t,profilePic:r},n=await a.create(e);return s.status(200).send({status:!0,message:"Authentication successful",data:n})}}catch(e){return s.status(400).send({status:!1,message:e.message})}},updateUser:async(e,s)=>{try{const{userId:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"userId is required"});let r=await a.findOne({userId:t});if(!r)return s.status(400).send({status:!1,message:"User not found"});let i=e.body;return"name"in i&&(r.name=i.name),"phone"in i&&(r.phone=i.phone),"gender"in i&&(r.gender=i.gender),"date_of_birth"in i&&(r.date_of_birth=i.date_of_birth),"Address"in i&&("address"in i.Address&&(r.Address.address=i.Address.address),"apartment"in i.Address&&(r.Address.apartment=i.Address.apartment),"city"in i.Address&&(r.Address.city=i.Address.city),"post_code"in i.Address&&(r.Address.post_code=i.Address.post_code),"state"in i.Address&&(r.Address.state=i.Address.state)),"education"in i&&(r.education=i.education),await r.save(),s.status(200).send({status:!0,message:"User updated successfully",data:r})}catch(e){return s.status(400).send({status:!1,message:e.message})}},deleteUser:async(e,s)=>{try{let{userId:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"userId is required"});let i=await a.findOne({userId:t});if(!i)return s.status(400).send({status:!1,message:"User not found"});const{reason:d,feedback:n}=e.body;let u={user:i,userAllBookings:await bookingModel.find({userId:t})},o=JSON.stringify(u);await a.deleteOne({userId:t});let l={userId:t,deletedUserData:o,reason:d,feedback:n,deletedAt:(new Date).toLocaleString()};return await r.create(l),s.status(200).send({status:!0,message:"User deleted successfully"})}catch(e){return s.status(400).send({status:!1,message:e.message})}},getUserById:async(e,s)=>{try{let{userId:t,key:r}=e.params;if(!t||!r)return s.status(400).send({status:!1,message:"All fields are required"});if(r!==o)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let i=await a.findOne({userId:t});return i?s.status(200).send({status:!0,message:"Success",data:i}):s.status(400).send({status:!1,message:"User not found"})}catch(e){return s.status(400).send({status:!1,message:e.message})}},getAllUsers:async(e,s)=>{try{let{key:t}=e.params;if(!t)return s.status(400).send({status:!1,message:"key is required"});if(t!==o)return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let r=await a.find({});return s.status(200).send({status:!0,message:"Success",data:r})}catch(e){return s.status(400).send({status:!1,message:e.message})}}}},3797:e=>{class s extends Error{constructor(e,s,t,a){super(t),this.name=e,this.statusCode=s,this.details=a}}e.exports=s},3526:(e,s,t)=>{const{isValidObjectId:a}=t(6037),{tokenSecretKey:r}=t(669),i=t(6107),d=t(829);e.exports={Authentication:async(e,s,t)=>{try{let a=e.headers.authorization;if(!a)return s.status(400).send({status:!1,message:"Token is required"});let i,n=a.split(" ")[1];if(!n)return s.status(400).send({status:!1,message:"Invalid token"});d.verify(n,r,((s,a)=>{if(s)throw s;i=a;let r=i.adminId;e.adminId=r,t()}))}catch(e){return s.status(500).send({status:!1,message:e.message})}},Authorization:async(e,s,t)=>{try{let r=e.adminId,{adminId:d}=e.params;if(!a(d))return s.status(400).send({status:!1,message:"Invalid userId"});let n=await i.findById(d);if(!n)return s.status(404).send({status:!1,message:"Admin not found"});let u=n._id;if(r.toString()!==u.toString())return s.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});t()}catch(e){return s.status(500).send({status:!1,message:e.message})}}}},6107:(e,s,t)=>{const a=t(6037),r=(a.Schema.Types.ObjectId,new a.Schema({adminId:{type:String},sessionToken:{type:String},name:{type:String},email:{type:String},password:{type:String},mobile:{type:String},profilePic:{picName:{type:String},picPath:{type:String}}},{timestamps:!0}));e.exports=a.model("Admin",r)},3751:(e,s,t)=>{const a=t(6037),r=new a.Schema({bannerImages:[{imageName:{type:String,default:""},imagePath:{type:String,default:""}}]},{timestamps:!0});e.exports=a.model("BannerImage",r)},4406:(e,s,t)=>{const a=t(6037),r=(a.Schema.Types.ObjectId,new a.Schema({name:{type:String,default:""},description:{type:String,default:""},category_image:{fileName:{type:String,default:""},filePath:{type:String,default:""}},cat_enum:{type:String,enum:["",""]}},{timestamps:!0}));e.exports=a.model("Category",r)},2357:(e,s,t)=>{const a=t(6037),r=(a.Schema.Types.ObjectId,new a.Schema({courseId:{type:String,default:""},course_name:{type:String,default:""},meeting_link:{type:String,default:""},teacherId:{type:String,default:""},techer_name:{type:String,default:""},input_text:{type:String,default:""},pdf_upload_file:{fileName:{type:String,default:""},filePath:{type:String,default:""}},youtube_video_code:{type:String,default:""},status:{type:String,default:""}},{timestamps:!0}));e.exports=a.model("Class_Schedule",r)},7013:(e,s,t)=>{const a=t(6037),r=a.Schema.Types.ObjectId,i=new a.Schema({categoryId:{type:r,ref:"Category"},category_name:{type:String,default:""},course_name:{type:String,default:""},description:{type:String,default:""},course_fee:{type:Number,default:0},duration:{type:String,default:""},start_date:{type:String,default:""},end_date:{type:String,default:""},class_time:{type:String,default:""},course_image:{fileName:{type:String,default:""},filePath:{type:String,default:""}},course_seat_limit:{type:Number,default:0},offer_in_amount:{type:Number,default:0},course_type:{type:String,default:""}},{timestamps:!0});e.exports=a.model("Course",i)},8116:(e,s,t)=>{const a=t(6037),r=a.Schema.Types.ObjectId,i=new a.Schema({courseId:{type:r,ref:"Course"},userId:{type:String,default:""},amount:{type:Number,default:0},status:{type:String,default:""},notes:{type:String,default:""}},{timestamps:!0});e.exports=a.model("CoursePurchase",i)},2950:(e,s,t)=>{const a=t(6037),r=new a.Schema({userId:{type:String},deletedUserData:{type:String},reason:{type:String},feedback:{type:String},deletedAt:{type:String}},{timestamps:!0});e.exports=a.model("DeletedUser",r)},9760:(e,s,t)=>{const a=t(6037),r=(a.Schema.Types.ObjectId,new a.Schema({name:{type:String,default:""},profilePic:{fileName:{type:String,default:""},filePath:{type:String,default:""}},description:{type:String,default:""}},{timestamps:!0}));e.exports=a.model("Teacher",r)},1935:(e,s,t)=>{const a=t(6037),r=(a.Schema.Types.ObjectId,new a.Schema({userId:{type:String,unique:!0,default:""},name:{type:String,required:!0,trim:!0},profilePic:{type:String},gender:{type:String,enum:["MALE","FEMALE","OTHER","UNDEFINED"],default:"UNDEFINED"},Address:{address:{type:String,default:""},apartment:{type:String,default:""},city:{type:String,default:""},post_code:{type:String,default:""},state:{type:String,default:""}},email:{type:String,default:""},phone:{type:String,default:""},date_of_birth:{type:String,default:""},education:{type:String,default:""}},{timestamps:!0}));e.exports=a.model("User",r)},2508:(e,s,t)=>{const a=t(7252).Router(),{createAdmin:r,adminLogin:i,getAllBookingsOfUser:d}=t(6593),{Authentication:n,Authorization:u}=t(3526);a.post("/api/v1/createSuperAdmin",r),a.post("/api/v1/loginSuperAdmin",i),a.get("/api/v1/getUserAllBookings/:adminId/:sessionToken/:userId",d),e.exports=a},2683:(e,s,t)=>{const a=t(7252).Router(),{addCategory:r,getCategoryById:i,getProductByKeywords:d,getAllCategories:n,updateCategory:u,deleteCategory:o}=t(452);a.post("/api/v1/addCategory/:key",r),a.post("/api/v1/viewService/:categoryId",i),a.post("/api/v1/allProductSearchByKeywords",d),a.get("/api/v1/getAllCategories/:key",n),a.put("/api/v1/updateCategory/:key/:categoryId",u),a.delete("/api/v1/deleteCategory/:key/:categoryId",o),e.exports=a},6826:(e,s,t)=>{const a=t(7252).Router(),{addCourse:r,getAllCourses:i,updateCourse:d,deleteCourse:n,getCourseById:u,getAllClassesOfMyCourse:o}=t(9957);a.post("/api/v1/addCourse/:key",r),a.get("/api/v1/getCourse/:key/:courseId",u),a.get("/api/v1/getAllCourses/:key",i),a.put("/api/v1/updateCourse/:key/:courseId",d),a.delete("/api/v1/deleteCourse/:key/:courseId",n),a.get("/api/v1/getAllClassesOfMyCourse/:userId/:courseId",o),e.exports=a},6051:(e,s,t)=>{const a=t(7252).Router(),{getDashboard:r,updateBannerImages:i,deleteBannerImage:d,getAdminDashboard:n}=t(9506);a.get("/api/v1/getDashboard/:key/:userId?",r),a.get("/api/v1/getAdminDashboard/:key",n),a.put("/api/v1/addOrUpdateBanner/:key",i),a.delete("/api/v1/deleteBanner/:imageId/:key",d),e.exports=a},468:(e,s,t)=>{const a=t(7252).Router(),{purchaseCourse:r,getPurchasedCourse:i,getAllPurchasedCourses:d,updatePurchasedCourseDetails:n,deletePurchaseDetails:u,getMyAllPurchasedCourses:o,getAllUsersOfACourse:l}=t(3974);a.post("/api/v1/addPurchaseDetails/:userId",r),a.get("/api/v1/getPurchasedDetails/:key/:purchaseId",i),a.get("/api/v1/getMyAllPurchasedDetails/:key/:userId",o),a.get("/api/v1/getAllPurchasedDetails/:key",d),a.put("/api/v1/updatePurchasedDetails/:key/:purchaseId",n),a.delete("/api/v1/deletePurchaseDetails/:key/:purchaseId",u),a.get("/api/v1/getAllUsersOfACourse/:key/:courseId",l),e.exports=a},8738:(e,s,t)=>{const a=t(7252).Router(),{createClassSchedule:r,getAllClassSchedule:i,getSchedule:d,updateSchedule:n,deleteSchedule:u}=t(8295);a.post("/api/v1/createSchedule/:key",r),a.get("/api/v1/getSchedule/:key/:courseId",d),a.get("/api/v1/getAllClassSchedule/:key",i),a.put("/api/v1/updateSchedule/:key/:courseId",n),a.delete("/api/v1/deletSchedule/:key/:courseId",u),e.exports=a},1901:(e,s,t)=>{const a=t(7252).Router(),{addTeacher:r,getAllTeachers:i,getTeacherById:d,updateTeacher:n,deleteTeacher:u}=t(5196);a.post("/api/v1/addTeacher/:key",r),a.get("/api/v1/getTeacher/:key/:teacherId",d),a.get("/api/v1/getAllTeachers/:key",i),a.put("/api/v1/updateTeacher/:key/:teacherId",n),a.delete("/api/v1/deletTeacher/:key/:teacherId",u),e.exports=a},9768:(e,s,t)=>{const a=t(7252).Router(),{authenticateUser:r,updateUser:i,getAllUsers:d,getUserById:n,deleteUser:u}=t(1579);a.post("/api/v1/authenticateUser",r),a.get("/api/v1/getUser/:userId/:key",n),a.get("/api/v1/users/:key",d),a.post("/api/v1/updateUser/:userId",i),a.delete("/api/v1/deleteUser/:userId",u),a.get("/api/v1/getAllUsers",d),e.exports=a},7048:(e,s,t)=>{const a=t(3797),{StatusCodes:r}=t(7138);e.exports={errorHandler:function(e,s,t,i){return e instanceof a?t.status(e.statusCode).json({success:!1,message:e.message,err:e.details,data:{}}):t.status(r.INTERNAL_SERVER_ERROR).json({success:!1,message:"Something went wrong",err:e,data:{}})}}},8093:(e,s,t)=>{const a=t(857);e.exports={getCurrentIPAddress:()=>{let e=a.networkInterfaces();return Object.values(e).flat().filter((e=>"IPv4"===e.family&&!e.internal)).map((e=>e.address))[0]},generateRandomAlphaNumericID:function(e){let s="";for(let t=0;t<e;t++)s+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"[Math.floor(62*Math.random())];return s}}},5486:e=>{"use strict";e.exports=require("bcrypt")},3268:e=>{"use strict";e.exports=require("body-parser")},7174:e=>{"use strict";e.exports=require("compression")},8577:e=>{"use strict";e.exports=require("cors")},818:e=>{"use strict";e.exports=require("dotenv")},7252:e=>{"use strict";e.exports=require("express")},6376:e=>{"use strict";e.exports=require("express-fileupload")},2239:e=>{"use strict";e.exports=require("express-mongo-sanitize")},2525:e=>{"use strict";e.exports=require("helmet")},8900:e=>{"use strict";e.exports=require("hpp")},7138:e=>{"use strict";e.exports=require("http-status-codes")},829:e=>{"use strict";e.exports=require("jsonwebtoken")},6037:e=>{"use strict";e.exports=require("mongoose")},3903:e=>{"use strict";e.exports=require("uuid")},5124:e=>{"use strict";e.exports=require("winston")},8639:e=>{"use strict";e.exports=require("winston-mongodb")},9896:e=>{"use strict";e.exports=require("fs")},857:e=>{"use strict";e.exports=require("os")},6928:e=>{"use strict";e.exports=require("path")}},s={};function t(a){var r=s[a];if(void 0!==r)return r.exports;var i=s[a]={exports:{}};return e[a](i,i.exports,t),i.exports}const a=t(7252),r=t(3268),i=t(6376),d=t(8577),n=t(2525),u=t(7174),o=t(2239),l=t(8900),{port:c}=t(669),{connectToDatabase:m}=t(6865),{errorHandler:g}=t(7048),p=a();p.use(n()),p.use(d()),p.use(u()),p.use(o()),p.use(l()),p.use(a.json({limit:"50mb"})),p.use(a.urlencoded({extended:!0,limit:"50mb"})),p.use(r.json({limit:"50mb"})),p.use(r.text()),p.use(i()),p.use(d());const y=t(2508),f=t(6826),h=t(9768),I=t(2683),_=t(6051),S=t(468),k=t(8738),A=t(1901);p.use(n.contentSecurityPolicy({directives:{defaultSrc:["'self'"],scriptSrc:["'self'","'unsafe-inline'"],objectSrc:["'none'"],upgradeInsecureRequests:[]}})),p.use(n.hsts({maxAge:31536e3,includeSubDomains:!0,preload:!0})),p.use("/userImages",a.static(__dirname+"/userImages")),p.use("/productImages",a.static(__dirname+"/productImages")),p.use("/categoryImages",a.static(__dirname+"/categoryImages/")),p.use("/superdealImages",a.static(__dirname+"/superdealImages")),p.use("/bannerImages",a.static(__dirname+"/bannerImages")),p.use("/courseImages",a.static(__dirname+"/courseImages")),p.use("/class_pdf",a.static(__dirname+"/class_pdf")),p.use("/uploads",a.static(__dirname+"/uploads")),p.use("/",y),p.use("/",f),p.use("/",h),p.use("/",I),p.use("/",_),p.use("/",S),p.use("/",k),p.use("/",A),p.get("/",((e,s)=>{s.send("<h1>Coaching App is Up and Running</h1>")})),p.use(g);const w=p.listen(c,(async()=>{console.log("App is running on port",c),await m}));process.on("unhandledRejection",((e,s)=>{console.error("Unhandled Rejection at:",s,"reason:",e),w.close((()=>{process.exit(1)}))})),process.on("uncaughtException",(e=>{console.error("Uncaught Exception thrown:",e),w.close((()=>{process.exit(1)}))})),process.on("SIGTERM",(()=>{console.log("SIGTERM signal received: closing HTTP server"),w.close((()=>{console.log("HTTP server closed"),process.exit(0)}))})),process.on("SIGINT",(()=>{console.log("SIGINT signal received: closing HTTP server"),w.close((()=>{console.log("HTTP server closed"),process.exit(0)}))}))})();
>>>>>>> b774b28b6bf842c34e531255a43f3b9a04a93b0c
//# sourceMappingURL=index.js.map